
package service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TaskService", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TaskService {


    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "completeTaskSupport", targetNamespace = "http://service/", className = "service.CompleteTaskSupport")
    @ResponseWrapper(localName = "completeTaskSupportResponse", targetNamespace = "http://service/", className = "service.CompleteTaskSupportResponse")
    @Action(input = "http://service/TaskService/completeTaskSupportRequest", output = "http://service/TaskService/completeTaskSupportResponse")
    public void completeTaskSupport(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.util.List<service.Task>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllAppropriateTasks", targetNamespace = "http://service/", className = "service.GetAllAppropriateTasks")
    @ResponseWrapper(localName = "getAllAppropriateTasksResponse", targetNamespace = "http://service/", className = "service.GetAllAppropriateTasksResponse")
    @Action(input = "http://service/TaskService/getAllAppropriateTasksRequest", output = "http://service/TaskService/getAllAppropriateTasksResponse")
    public List<Task> getAllAppropriateTasks();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "confirmCompleteTask", targetNamespace = "http://service/", className = "service.ConfirmCompleteTask")
    @ResponseWrapper(localName = "confirmCompleteTaskResponse", targetNamespace = "http://service/", className = "service.ConfirmCompleteTaskResponse")
    @Action(input = "http://service/TaskService/confirmCompleteTaskRequest", output = "http://service/TaskService/confirmCompleteTaskResponse")
    public void confirmCompleteTask(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "setNewStatus", targetNamespace = "http://service/", className = "service.SetNewStatus")
    @ResponseWrapper(localName = "setNewStatusResponse", targetNamespace = "http://service/", className = "service.SetNewStatusResponse")
    @Action(input = "http://service/TaskService/setNewStatusRequest", output = "http://service/TaskService/setNewStatusResponse")
    public void setNewStatus(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        TaskStatus arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "reopenTask", targetNamespace = "http://service/", className = "service.ReopenTask")
    @ResponseWrapper(localName = "reopenTaskResponse", targetNamespace = "http://service/", className = "service.ReopenTaskResponse")
    @Action(input = "http://service/TaskService/reopenTaskRequest", output = "http://service/TaskService/reopenTaskResponse")
    public void reopenTask(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addTask", targetNamespace = "http://service/", className = "service.AddTask")
    @ResponseWrapper(localName = "addTaskResponse", targetNamespace = "http://service/", className = "service.AddTaskResponse")
    @Action(input = "http://service/TaskService/addTaskRequest", output = "http://service/TaskService/addTaskResponse")
    public int addTask(
        @WebParam(name = "arg0", targetNamespace = "")
        Task arg0);

    /**
     * 
     * @return
     *     returns java.util.List<service.Task>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllTasks", targetNamespace = "http://service/", className = "service.GetAllTasks")
    @ResponseWrapper(localName = "getAllTasksResponse", targetNamespace = "http://service/", className = "service.GetAllTasksResponse")
    @Action(input = "http://service/TaskService/getAllTasksRequest", output = "http://service/TaskService/getAllTasksResponse")
    public List<Task> getAllTasks();

    /**
     * 
     * @param arg0
     * @return
     *     returns service.Task
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTaskById", targetNamespace = "http://service/", className = "service.GetTaskById")
    @ResponseWrapper(localName = "getTaskByIdResponse", targetNamespace = "http://service/", className = "service.GetTaskByIdResponse")
    @Action(input = "http://service/TaskService/getTaskByIdRequest", output = "http://service/TaskService/getTaskByIdResponse")
    public Task getTaskById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
